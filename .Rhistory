library(dplyr)
library(ggplot2)
lambda <- 0.2
samplesPerTest <- 40
numTests <- 1000
dataSim <- rexp(n = samplesPerTest*numTests,lambda)
testMatrix <- matrix(data = dataSim, nrow = numTests)
View(testMatrix)
View(testMatrix)
meanSamples <- apply(testMatrix,1,mean)
meanSamplesDF <- data.frame(meanSamples)
View(meanSamplesDF)
?tbl_df
meanSimulation <-  meanSamplesDF %>% summarize(simMean = mean(means)) %>% unlist()
meanSamplesDF <- data.frame(means = meanSamples)
meanSimulation <-  meanSamplesDF %>% summarize(simMean = mean(means)) %>% unlist()
meanSimulation <-  meanSamplesDF %>% summarize(simMean = mean(means))
%>% unlist()
View(meanSimulation)
g<- ggplot(meanSamples,aes(x = means) ) + geom_histogram(alpha=0.4, binwidth= .25, fill = "salmon", col = "white") +
geom_vline(xintercept = mean_sim, color="black", size = 0.5) +
ggtitle("Distribution of simulated means")
g<- ggplot(meanSamplesDF,aes(x = means) ) + geom_histogram(alpha=0.4, binwidth= .25, fill = "salmon", col = "white") +
geom_vline(xintercept = meanSimulation, color="black", size = 0.5) +
ggtitle("Distribution of simulated means")
print g
g
meanSimulation<-meanSamplesDF%>%summarize(simMean = mean(means))%>% unlist()
g<- ggplot(meanSamplesDF,aes(x = means) ) + geom_histogram(alpha=0.4, binwidth= .25, fill = "salmon", col = "white") +
geom_vline(xintercept = meanSimulation, color="black", size = 0.5) +
ggtitle("Distribution of simulated means")
g
g<- ggplot(meanSamplesDF,aes(x = means) ) + geom_histogram(alpha=0.4, binwidth= .25, fill = "blue", col = "white") +
geom_vline(xintercept = meanSimulation, color="black", size = 0.5) +
ggtitle("Distribution of simulated means")
g
g<- ggplot(meanSamplesDF,aes(x = means) ) + geom_histogram(alpha=0.4, binwidth= .25, fill = "blue", col = "black") +
geom_vline(xintercept = meanSimulation, color="black", size = 0.5) +
ggtitle("Distribution of simulated means")
g
g<- ggplot(meanSamplesDF,aes(x = means) ) + geom_histogram(alpha=0.4, binwidth= .25, fill = "blue", col = "black") +
geom_vline(xintercept = meanSimulation, color="red", size = 0.5) +
ggtitle("Distribution of simulated means")
g
z <- meanSamplesDF %>%  mutate(zScore = (means - 1/lambda) / (1/lambda / sqrt(n)))  %>% select(zScore) %>%
summarise(z = mean(zScore) %>% unlist())
z <- meanSamplesDF %>%  mutate(zScore = (means - 1/lambda) / (1/lambda / sqrt(n)))  %>% select(zScore) %>% summarise(z = mean(zScore) %>% unlist())
(z <- meanSamplesDF %>%  mutate(zScore = (means - 1/lambda) / (1/lambda / sqrt(n)))  %>% select(zScore) %>%
summarise(z = mean(zScore)) %>% unlist())
(z <- meanSamplesDF %>%  mutate(zScore = (means - 1/lambda) / (1/lambda / sqrt(n))) %>% select(zScore) %>% summarise(z = mean(zScore)) %>% unlist())
library(dplyr)
(z <- meanSamplesDF %>%  mutate(zScore = (means - 1/lambda) / (1/lambda / sqrt(n))) %>% select(zScore) %>% summarise(z = mean(zScore)) %>% unlist())
(z <- meanSamples %>%  mutate(zScore = (means - 1/lambda) / (1/lambda / sqrt(n))) %>% select(zScore) %>% summarise(z = mean(zScore)) %>% unlist())
(z <- meanSamplesDF %>%  mutate(zScore = (means - 1/lambda) / (1/lambda / sqrt(n))) %>% select(zScore) %>% summarise(z = mean(zScore)) %>% unlist())
z <- (meanSamplesDF$means - (1/lambda)/((1/lambda)/sqrt(n)))
z <- (meanSamplesDF$means - (1/lambda)/((1/lambda)/sqrt(samplesPerTest)))
zMean <- mean(zScore)
zMean
zMean <- mean(zScore)
zScore <- (meanSamplesDF$means - (1/lambda)/((1/lambda)/sqrt(samplesPerTest)))
remove(z)
zMean <- mean(zScore)
zScore <- (meanSamplesDF$means - (1/lambda))
zScore <- zScore/(1/lambda/sqrt(samplesPerTest))
zMean <- mean(zScore)
zPlot <- ggplot(zScore, aes(x = zScore)) +
geom_histogram(alpha=0.1,  binwidth = 0.3, fill="red", color="black", aes(y = ..density..)) +
stat_function(fun = dnorm, size = 1.3) +
geom_vline(xintercept = zMean, color="green", size = 0.5) +
ggtitle("Distribution of standardized \nsimulated means") +
xlab("z-scores")
library(ggplot2)
zPlot <- ggplot(zScore, aes(x = zScore)) +
geom_histogram(alpha=0.1,  binwidth = 0.3, fill="red", color="black", aes(y = ..density..)) +
stat_function(fun = dnorm, size = 1.3) +
geom_vline(xintercept = zMean, color="green", size = 0.5) +
ggtitle("Distribution of standardized \nsimulated means") +
xlab("z-scores")
zPlot <- ggplot(as.data.frame(zScore), aes(x = zScore)) +
geom_histogram(alpha=0.1,  binwidth = 0.3, fill="red", color="black", aes(y = ..density..)) +
stat_function(fun = dnorm, size = 1.3) +
geom_vline(xintercept = zMean, color="green", size = 0.5) +
ggtitle("Distribution of standardized \nsimulated means") +
xlab("z-scores")
zPlot
zPlot <- ggplot(as.data.frame(zScore), aes(x = zScore)) +
geom_histogram(alpha=0.1,  binwidth = 0.3, fill="gray", color="black", aes(y = ..density..)) +
stat_function(fun = dnorm, size = 1.3) +
geom_vline(xintercept = zMean, color="green", size = 0.5) +
ggtitle("Distribution of standardized \nsimulated means") +
xlab("z-scores")
zPlot
zPlot <- ggplot(as.data.frame(zScore), aes(x = zScore)) +
geom_histogram(alpha=0.1,  binwidth = 0.3, fill="yellow", color="black", aes(y = ..density..)) +
stat_function(fun = dnorm, size = 1.3) +
geom_vline(xintercept = zMean, color="green", size = 0.5) +
ggtitle("Distribution of standardized \nsimulated means") +
xlab("z-scores")
zPlot
